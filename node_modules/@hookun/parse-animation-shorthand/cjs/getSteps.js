"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSteps = void 0;
const getNumber_1 = require("./getNumber");
const getCustomIdent_1 = require("./getCustomIdent");
const character_1 = require("./character");
const skip_1 = require("./skip");
const keyword_1 = require("./keyword");
const Error_1 = require("./Error");
const getSteps = (input, start) => {
    if (input.codePointAt(start) !== character_1.OpenParenthesis) {
        throw new Error_1.$Error('NoOpenParenthesis');
    }
    let end = (0, skip_1.skip)(input, start + 1, character_1.isWhiteSpace);
    const count = (0, getNumber_1.getNumber)(input, end);
    const value = {
        type: 'steps',
        stepCount: count.value,
        direction: 'end',
    };
    end = (0, skip_1.skip)(input, count.end, character_1.isWhiteSpace);
    if (input.codePointAt(end) === character_1.Comma) {
        end = (0, skip_1.skip)(input, end + 1, character_1.isWhiteSpace);
        const direction = (0, getCustomIdent_1.getCustomIdent)(input, end);
        if (!keyword_1.StepDirection.has(direction.value)) {
            throw new Error_1.$Error('UnknownStepDirection', direction.value);
        }
        value.direction = direction.value;
        end = direction.end;
    }
    end = (0, skip_1.skip)(input, end, character_1.isWhiteSpace);
    if (input.codePointAt(end) !== character_1.CloseParenthesis) {
        throw new Error_1.$Error('UnclosedParenthesis');
    }
    return { start, end: end + 1, value };
};
exports.getSteps = getSteps;
