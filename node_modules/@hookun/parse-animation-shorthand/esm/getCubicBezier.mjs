"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCubicBezier = void 0;
const character_1 = require("./character");
const skip_1 = require("./skip");
const getNumber_1 = require("./getNumber");
const Error_1 = require("./Error");
const getCubicBezier = (input, start) => {
    if (input.codePointAt(start) !== character_1.OpenParenthesis) {
        throw new Error_1.$Error('NoOpenParenthesis');
    }
    const value = [0, 0, 0, 0];
    let end = start + 1;
    for (let index = 0; index < 4; index++) {
        end = (0, skip_1.skip)(input, end, character_1.isWhiteSpace);
        if (0 < index) {
            if (input.codePointAt(end) === character_1.Comma) {
                end = (0, skip_1.skip)(input, end + 1, character_1.isWhiteSpace);
            }
            else {
                throw new Error_1.$Error('NoComma');
            }
        }
        const number = (0, getNumber_1.getNumber)(input, end);
        value[index] = number.value;
        end = number.end;
    }
    end = (0, skip_1.skip)(input, end, character_1.isWhiteSpace);
    if (input.codePointAt(end) !== character_1.CloseParenthesis) {
        throw new Error_1.$Error('UnclosedParenthesis');
    }
    return {
        start,
        end: end + 1,
        value: { type: 'cubic-bezier', value },
    };
};
exports.getCubicBezier = getCubicBezier;
